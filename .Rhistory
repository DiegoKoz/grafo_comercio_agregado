V(grafo)$color <- correspondencia$color
E(grafo)$edge.color <- "gray80"
trade <- E(grafo)$TradeValue
width <- (trade-min(trade))/(max(trade)-min(trade))*10
E(grafo)$width <- width
if (layout == "circle") {
l <-layout_in_circle(grafo, order = order(V(grafo)$continente,V(grafo)))
V(grafo)$size <- log(degree(grafo)+1)*3
if (save) {
if (label) {
png(paste0("graficos/","grafo_Circ_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width, edge.curved=.1, main= paste0("\n 2011, Threshold ", threshold_pct*100,"%"))
legend(x=-1.5,  y=1.5,unique(correspondencia$continent),
pch=21,col="#777777",pt.bg=unique(correspondencia$color),
pt.cex=2,cex=1,bty="n",ncol=5)
}
else{
png(paste0("graficos/","grafoCirc_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width, main= paste0("2011, Threshold ", threshold_pct*100,"%"))
}
dev.off()
}
else{
if (label) {
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width)#, main= paste0("Grafo año 2011, punto de corte de ", threshold_pct*100,"%"))
legend(x=-2,  y=1.5,unique(correspondencia$continent),
pch=21,col="#777777",pt.bg=unique(correspondencia$color),
pt.cex=2,cex=.75,bty="n",ncol=5)
}
else{
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width)#, main= paste0("Grafo año 2011, punto de corte de ",
}
}
}
else{
l <-layout_nicely(grafo)
if (save) {
if (label) {
png(paste0("graficos/","grafo_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.5,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l)#, main= paste0("Grafo año 2011, punto de corte de ",
#              threshold_pct*100,"%"))
legend(x=-1.5,  y=1.5,unique(unique(correspondencia$continent)),
pch=21,col="#777777",pt.bg=unique(unique(correspondencia$color)),
pt.cex=2,cex=1.2,bty="n",ncol=5)
}
else{
png(paste0("graficos/","grafo_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.5,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l)#, main= paste0("Grafo año 2011, punto de corte de ",
}
dev.off()
}
else{
if (label) {
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l, main= paste0("Grafo año 2011, punto de corte de ", threshold_pct*100,"%"))
legend(x=-.5,  y=1,unique(unique(correspondencia$continent)),
pch=21,col="#777777",pt.bg=unique(unique(correspondencia$color)),
pt.cex=2,cex=1.5,bty="n",ncol=1)
}
else{
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l)#, main= paste0("Grafo año 2011, punto de corte de ",
}
}
}
}
grafico_grafo(datos = dataset2,threshold_pct = 0.01, save = T, label = TRUE)
grafico_grafo(datos = dataset2,threshold_pct = 0.2, save = T, label = TRUE)
grafico_grafo <- function(threshold_pct, save = TRUE, datos = dataset2, label = FALSE, layout="NA"){
lista_grafo <- trade_to_graph(edges = datos, threshold_pct = threshold_pct)
grafo <- lista_grafo$grafo
nombres_vertices <- data_frame(rt3ISO=as.vector(V(grafo)$name))
countrycode_data2 <- countrycode::countrycode_data %>%
select(rt3ISO = iso3c, continent)
correspondencia <- left_join(nombres_vertices,countrycode_data2) %>%
mutate(color = case_when(continent == "Europe" ~"#E41A1C",
continent == "Africa" ~"#377EB8",
continent == "Asia" ~"#4DAF4A",
continent == "Oceania" ~"#984EA3",
continent == "Americas" ~"#FF7F00") )
V(grafo)$continente <- correspondencia$continent
V(grafo)$color <- correspondencia$color
E(grafo)$edge.color <- "gray80"
trade <- E(grafo)$TradeValue
width <- (trade-min(trade))/(max(trade)-min(trade))*10
E(grafo)$width <- width
if (layout == "circle") {
l <-layout_in_circle(grafo, order = order(V(grafo)$continente,V(grafo)))
V(grafo)$size <- log(degree(grafo)+1)*3
if (save) {
if (label) {
png(paste0("graficos/","grafo_Circ_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width, edge.curved=.1, main= paste0("\n 2011, Threshold ", threshold_pct*100,"%"))
legend(x=-1.5,  y=1.5,unique(correspondencia$continent),
pch=21,col="#777777",pt.bg=unique(correspondencia$color),
pt.cex=2,cex=1,bty="n",ncol=5)
}
else{
png(paste0("graficos/","grafoCirc_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width, main= paste0("2011, Threshold ", threshold_pct*100,"%"))
}
dev.off()
}
else{
if (label) {
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width)#, main= paste0("Grafo año 2011, punto de corte de ", threshold_pct*100,"%"))
legend(x=-2,  y=1.5,unique(correspondencia$continent),
pch=21,col="#777777",pt.bg=unique(correspondencia$color),
pt.cex=2,cex=.75,bty="n",ncol=5)
}
else{
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width)#, main= paste0("Grafo año 2011, punto de corte de ",
}
}
}
else{
l <-layout_nicely(grafo)
if (save) {
if (label) {
png(paste0("graficos/","grafo_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.7,vertex.frame.color="#ffffff", edge.size = .5,
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l)#, main= paste0("Grafo año 2011, punto de corte de ",
#              threshold_pct*100,"%"))
legend(x=-1.5,  y=1.5,unique(unique(correspondencia$continent)),
pch=21,col="#777777",pt.bg=unique(unique(correspondencia$color)),
pt.cex=2,cex=1.2,bty="n",ncol=5)
}
else{
png(paste0("graficos/","grafo_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.7,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l)#, main= paste0("Grafo año 2011, punto de corte de ",
}
dev.off()
}
else{
if (label) {
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l, main= paste0("Grafo año 2011, punto de corte de ", threshold_pct*100,"%"))
legend(x=-.5,  y=1,unique(unique(correspondencia$continent)),
pch=21,col="#777777",pt.bg=unique(unique(correspondencia$color)),
pt.cex=2,cex=1.5,bty="n",ncol=1)
}
else{
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l)#, main= paste0("Grafo año 2011, punto de corte de ",
}
}
}
}
grafico_grafo(datos = dataset2,threshold_pct = 0.01, save = T, label = TRUE)
grafico_grafo(datos = dataset2,threshold_pct = 0.2, save = T, label = TRUE)
grafico_grafo <- function(threshold_pct, save = TRUE, datos = dataset2, label = FALSE, layout="NA"){
lista_grafo <- trade_to_graph(edges = datos, threshold_pct = threshold_pct)
grafo <- lista_grafo$grafo
nombres_vertices <- data_frame(rt3ISO=as.vector(V(grafo)$name))
countrycode_data2 <- countrycode::countrycode_data %>%
select(rt3ISO = iso3c, continent)
correspondencia <- left_join(nombres_vertices,countrycode_data2) %>%
mutate(color = case_when(continent == "Europe" ~"#E41A1C",
continent == "Africa" ~"#377EB8",
continent == "Asia" ~"#4DAF4A",
continent == "Oceania" ~"#984EA3",
continent == "Americas" ~"#FF7F00") )
V(grafo)$continente <- correspondencia$continent
V(grafo)$color <- correspondencia$color
E(grafo)$edge.color <- "gray80"
trade <- E(grafo)$TradeValue
width <- (trade-min(trade))/(max(trade)-min(trade))*10
E(grafo)$width <- width
if (layout == "circle") {
l <-layout_in_circle(grafo, order = order(V(grafo)$continente,V(grafo)))
V(grafo)$size <- log(degree(grafo)+1)*3
if (save) {
if (label) {
png(paste0("graficos/","grafo_Circ_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width, edge.curved=.1, main= paste0("\n 2011, Threshold ", threshold_pct*100,"%"))
legend(x=-1.5,  y=1.5,unique(correspondencia$continent),
pch=21,col="#777777",pt.bg=unique(correspondencia$color),
pt.cex=2,cex=1,bty="n",ncol=5)
}
else{
png(paste0("graficos/","grafoCirc_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width, main= paste0("2011, Threshold ", threshold_pct*100,"%"))
}
dev.off()
}
else{
if (label) {
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width)#, main= paste0("Grafo año 2011, punto de corte de ", threshold_pct*100,"%"))
legend(x=-2,  y=1.5,unique(correspondencia$continent),
pch=21,col="#777777",pt.bg=unique(correspondencia$color),
pt.cex=2,cex=.75,bty="n",ncol=5)
}
else{
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l,edge.width=E(grafo)$width)#, main= paste0("Grafo año 2011, punto de corte de ",
}
}
}
else{
l <-layout_nicely(grafo)
if (save) {
if (label) {
png(paste0("graficos/","grafo_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.7,vertex.frame.color="#ffffff", edge.size = .5,
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l)#, main= paste0("Grafo año 2011, punto de corte de ",
#              threshold_pct*100,"%"))
legend(x=-1.5,  y=1.5,unique(unique(correspondencia$continent)),
pch=21,col="#777777",pt.bg=unique(unique(correspondencia$color)),
pt.cex=2,cex=1.2,bty="n",ncol=5)
}
else{
png(paste0("graficos/","grafo_2011_",threshold_pct*100,"_pcnt.png"))
plot(grafo,edge.arrow.size=.7,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l)#, main= paste0("Grafo año 2011, punto de corte de ",
}
dev.off()
}
else{
if (label) {
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black", vertex.size = 6,
layout=l, main= paste0("Grafo año 2011, punto de corte de ", threshold_pct*100,"%"))
legend(x=-.5,  y=1,unique(unique(correspondencia$continent)),
pch=21,col="#777777",pt.bg=unique(unique(correspondencia$color)),
pt.cex=2,cex=1.5,bty="n",ncol=1)
}
else{
plot(grafo,edge.arrow.size=.2,vertex.frame.color="#ffffff",
vertex.label="", vertex.label.color="black",
layout=l)#, main= paste0("Grafo año 2011, punto de corte de ",
}
}
}
}
grafico_grafo(datos = dataset2,threshold_pct = 0.01, save = T, label = TRUE)
grafico_grafo(datos = dataset2,threshold_pct = 0.2, save = T, label = TRUE)
t Gleditsch. 1948-2000
rm(list = ls())
gc()
library(tidyverse)
library(ggthemes)
library(ggridges)
library(ggrepel)
library(igraph)
library(countrycode)
library(xlsx)
##### Funciones #####
trade_to_graph <- function(edges, threshold_pct = .01) {
edges <- edges %>%
group_by(rt3ISO) %>%
mutate(L = case_when(TradeValue>sum(TradeValue)*threshold_pct~1,
TRUE ~ 0)) %>%
na.omit(.)
edges <- edges %>% filter(L==1)
DF_red <- graph_from_data_frame(edges,directed = TRUE)
nombre_pais <- left_join(data_frame(cod = V(DF_red)$name),  countrycode_data %>%
select(cod = cowc, pais = country.name.en, continent))
V(DF_red)$pais <- nombre_pais$pais
V(DF_red)$continent <- nombre_pais$continent
connected_weak <- is_connected(DF_red, mode = 'weak')
connected_strong <- is_connected(DF_red, mode = 'strong')
diameter <- diameter(DF_red, directed = TRUE,unconnected = TRUE)
density <- graph.density(DF_red)
gsize <- gsize(DF_red)
## Centralidad
# Centralidad de intermediación
max_betweenness <- max(betweenness(DF_red, directed = T))
mean_betweenness <- mean(betweenness(DF_red, directed = T))
# Centralidades de cercanía
mean_closeness <- mean(closeness(DF_red, mode = "all"))
#autovalor
mean_eigen_centrality <- mean(eigen_centrality(DF_red, directed = F)$vector)
mean_eigen_centrality_ponderado <- mean(eigen_centrality(DF_red, directed = F,
weights = E(DF_red)$TradeValue)$vector)
#Grado
mean_degree <- mean(degree(DF_red))
#Transitividad
coef_clustering <- transitivity(DF_red,isolates = 'zero')
#correlacion de grado (Red selectiva o no selectiva)
correlacion <- assortativity_degree(DF_red, directed = F)
#Continentes
grados <-  data.frame(degree = degree(DF_red))
grados$cod <- row.names(grados)
grados <- grados %>%
left_join(.,nombre_pais) %>%
group_by(continent) %>%
summarise(mean_degree = mean(degree))
betweenness <-  data.frame(betweenness = betweenness(DF_red,directed = T))
betweenness$cod <- row.names(betweenness)
betweenness <- betweenness %>%
left_join(.,nombre_pais) %>%
group_by(continent) %>%
summarise(mean_betweenness = mean(betweenness))
closeness <-  data.frame(closeness = closeness(DF_red, mode = "all"))
closeness$cod <- row.names(closeness)
closeness <- closeness %>%
left_join(.,nombre_pais) %>%
group_by(continent) %>%
summarise(mean_closeness = mean(closeness))
autovalor <-  data.frame(autovalor = eigen_centrality(DF_red, directed = F)$vector)
autovalor$cod <- row.names(autovalor)
autovalor <- autovalor %>%
left_join(.,nombre_pais) %>%
group_by(continent) %>%
summarise(mean_autovalor = mean(autovalor))
return(list("grafo" =DF_red,
'connected_weak' = connected_weak,
'connected_strong' = connected_strong,
'diameter' = diameter,
'density' = density,
'naristas'= gsize,
"mean_betweenness" = mean_betweenness,
"max_betweenness" = max_betweenness,
"mean_closeness" = mean_closeness,
"mean_degree" = mean_degree,
"mean_eigen_centrality" = mean_eigen_centrality,
"mean_eigen_centrality_ponderado" = mean_eigen_centrality_ponderado,
"coef_clustering" = coef_clustering,
"correlacion" = correlacion,
"grados" = grados,
"betweenness"=betweenness,
"closeness"=closeness,
"autovalor"=autovalor))
}
trade_dd <- read_delim("Dataset/Gleditsch/exptradegdpv4.1/trade_dd.asc",delim = " ")
# Caracterización del dataset
trade_dd %>% filter(acra %in% c("USA","CAN"),acrb %in% c("USA","CAN"), year == 1995)
resumen <- trade_dd %>%
group_by(year) %>%
summarise(Cantidad_datos = n(),
Promedio_impo = mean(impab),
Promedio_expo = mean(expab)) %>%
gather(.,variable, valor, 2:4)
ggplot(resumen, aes(year, valor))+
geom_col()+
theme_tufte()+
labs(title= "Caracteristicas base Gleditsch")+
facet_grid(variable~., scales =  'free')
codigos <- countrycode_data  %>%
select(rt3ISO=cowc, rtTitle = country.name.en,  continent)
dataset_impo <- trade_dd %>%
select(rt3ISO = acra,pt3ISO = acrb,TradeValue = impab, yr = year) %>%
mutate(rt3ISO = case_when(rt3ISO == "FJI" ~ "FIJ",
rt3ISO == "RUM" ~ "ROM",
TRUE ~ rt3ISO)) %>%
left_join(codigos) %>% na.omit(.)
#expo
dataset_expo <- trade_dd %>%
select(rt3ISO = acra,pt3ISO = acrb,TradeValue = expab, yr = year) %>%
mutate(rt3ISO = case_when(rt3ISO == "FJI" ~ "FIJ",
rt3ISO == "RUM" ~ "ROM",
TRUE ~ rt3ISO)) %>%
left_join(codigos) %>% na.omit(.)
#### loop ####
caracteristicas_impo <- data_frame()
distribuciones_impo <- data_frame()
grados_continentes <- data_frame()
betweenness_continentes<- data_frame()
closeness_continentes<- data_frame()
autovalor_continentes<- data_frame()
for (nano  in sort(unique(dataset_impo$yr))) {
print(paste0("Año: ",nano))
dataset2 <- dataset_impo %>% filter(yr == nano)
net <- trade_to_graph(dataset2, threshold_pct = 0.01)
renglon <- c('yr'= nano,
'connected_weak' = net$connected_weak,
'connected_strong' = net$connected_strong,
'diameter' = net$diameter,
'density' = net$density,
'naristas' = net$naristas,
'max_betweenness' = net$max_betweenness,
'mean_betweenness' = net$mean_betweenness,
'mean_closeness' = net$mean_closeness,
'mean_degree' = net$mean_degree,
'mean_eigen_centrality' = net$mean_eigen_centrality,
'mean_eigen_centrality_ponderado' = net$mean_eigen_centrality_ponderado,
'coef_clustering' = net$coef_clustering,
'correlacion' = net$correlacion)
caracteristicas_impo <- bind_rows(caracteristicas_impo,renglon)
net$grados$yr <- nano
grados_continentes <- bind_rows(grados_continentes,net$grados)
net$betweenness$yr <- nano
betweenness_continentes <- bind_rows(betweenness_continentes, net$betweenness)
net$closeness$yr <- nano
closeness_continentes <- bind_rows(closeness_continentes, net$closeness)
net$autovalor$yr <- nano
autovalor_continentes <- bind_rows(autovalor_continentes, net$autovalor)
#distribuciones de intermediacion | grado | autovalor | autovalor ponderado
dist <- data.frame("yr" = nano,
'cod' = V(net$grafo)$name,
'pais' = V(net$grafo)$pais,
"betweenness" = betweenness(net$grafo, directed = T),
"degree" = degree(net$grafo),
"autovalor" = eigen_centrality(net$grafo, directed = F)$vector,
"autovalor_pond" = eigen_centrality(net$grafo, directed = F,
weights = E(net$grafo)$TradeValue)$vector)
distribuciones_impo <-  bind_rows(distribuciones_impo, dist)
}
caracteristicas_impo
distribuciones_impo
grados_continentes <- grados_continentes %>%
filter(!is.na(continent))
betweenness_continentes <- betweenness_continentes %>%
filter(!is.na(continent))
closeness_continentes <- closeness_continentes %>%
filter(!is.na(continent))
autovalor_continentes <- autovalor_continentes %>%
filter(!is.na(continent))
caract_continentes <- bind_rows(list(gather(grados_continentes %>%
rename(grado = mean_degree),key,value,2),
gather(closeness_continentes %>%
rename(cercania = mean_closeness),key,value,2),
gather(autovalor_continentes %>%
rename(autovalor = mean_autovalor),key,value,2)))
table(caracteristicas_impo$connected_weak)
table(caracteristicas_impo$connected_strong)
ggplot(caract_continentes, aes(yr,value, color = continent, group = continent))+
geom_line(size = 1)+
# geom_smooth(se = T)+
labs(x = "Año")+
facet_wrap(~key, scales = "free",ncol = 1)+
scale_color_gdocs(name= "Continente" )+
theme_tufte()
#### Presentation ####
ggplot(caract_continentes %>%
mutate(key = case_when(key == 'autovalor' ~ 'Eigenvalue',
key == 'cercania' ~ 'Closeness',
key == 'grado' ~ 'Grade')) , aes(yr,value, color = continent, group = continent))+
geom_line(size = 1)+
# geom_smooth(se = T)+
labs(x = "Year")+
facet_wrap(~key, scales = "free",ncol = 1)+
scale_color_gdocs(name= "Continent" )+
theme_tufte()
ggplot(grados_continentes, aes(yr,mean_degree, color = continent))+
geom_line(size = 1)+
# geom_smooth(se = T)+
labs(x = "Año", y = "Grado promedio")+
scale_color_gdocs(name= "Continente" )+
theme_tufte()
ggplot(betweenness_continentes, aes(yr,mean_betweenness, color = continent))+
geom_line(size = 1)+
# geom_smooth(se = T)+
labs(x = "Año", y = "Intermediación promedio")+
scale_color_gdocs(name= "Continente" )+
theme_tufte()
ggplot(caracteristicas_impo, aes(yr,diameter))+
geom_line(size = 1.25, color = "black")+
geom_smooth(se = F)+
labs(title= 'Diámetro de la red',
subtitle = "Importaciones, threshold 1%, según año")+
theme_tufte()
ggplot(caracteristicas_impo, aes(yr,naristas))+
geom_line(size = 1.25, color = "black")+
geom_smooth(se = F)+
labs(title= 'Número de aristas de la red',
subtitle = "Importaciones, threshold 1%, según año")+
theme_tufte()
#### Presentation ####
ggplot(caract_continentes %>%
mutate(key = case_when(key == 'autovalor' ~ 'Eigenvalue',
key == 'cercania' ~ 'Closeness',
key == 'grado' ~ 'Degree')) , aes(yr,value, color = continent, group = continent))+
geom_line(size = 1)+
# geom_smooth(se = T)+
labs(x = "Year")+
facet_wrap(~key, scales = "free",ncol = 1)+
scale_color_gdocs(name= "Continent" )+
theme_tufte()
ggsave("graficos/1950_2000_continent_all_presentation.png", scale = 1)
ggplot(grados_continentes, aes(yr,mean_degree, color = continent))+
geom_line(size = 1)+
# geom_smooth(se = T)+
labs(x = "Año", y = "Grado promedio")+
scale_color_gdocs(name= "Continente" )+
theme_tufte()
